services:
  backend:
    build:
      context: ./backend/server
      dockerfile: Dockerfile.server
    container_name: backend
    environment:
      AI_SERVICE_URL: http://ai:5000
      DATABASE_URL: postgres://user:password@postgres:5432/postgres
    depends_on:
      - ai
      - postgres
    ports:
      - "8081:8081"
    networks: [app-network]

  ai:
    build:
      context: ./backend/ai
      dockerfile: Dockerfile.ai-service
    container_name: ai
    environment:
      PORT: 5000
      CHROMA_HOST: chroma
      CHROMA_PORT: 8000
      OLLAMA_BASE_URL:
      OLLAMA_EMBED_MODEL: nomic-embed-text
    ports:
      - "5000:5000"
    volumes:
      - ./backend/ai:/app
    depends_on:
      - chroma
    networks: [app-network]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.client
      target: dev
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "8082:8082"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks: [app-network]

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks: [app-network]

  chroma:
    image: chromadb/chroma:latest
    container_name: chroma
    environment:
      IS_PERSISTENT: "TRUE"
      PERSIST_DIRECTORY: /data
    volumes:
      - ./data/chroma:/data
    ports:
      - "8000:8000"
    networks: [app-network]

networks:
  app-network:
    driver: bridge
volumes:
  postgres_data:
